import{aK as l,aV as m,aJ as p,aM as w,aN as f,aW as g,aX as C}from"./index.b79cd932.js";import{C as I,U as u,R as v}from"./url-bc88b2b6.browser.esm.36ecca18.js";import{I as _}from"./thirdweb-dev-wallets-evm-connectors-injected.browser.esm.6ae160b5.js";var r=new WeakMap;class y extends _{constructor(t){const s={...{name:"MetaMask",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:C},...t.options};super({chains:t.chains,options:s,connectorStorage:t.connectorStorage}),l(this,"id",m.metamask),p(this,r,{writable:!0,value:void 0}),w(this,r,s.UNSTABLE_shimOnConnectSelectAccount)}async connect(){var a,s;let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{const e=await this.getProvider();if(!e)throw new I;this.setupListeners(),this.emit("message",{type:"connecting"});let n=null;if(f(this,r)&&((a=this.options)==null?void 0:a.shimDisconnect)&&!Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))&&(n=await this.getAccount().catch(()=>null),!!n))try{await e.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(d){if(this.isUserRejectedRequestError(d))throw new u(d)}if(!n){const o=await e.request({method:"eth_requestAccounts"});n=g(o[0])}let i=await this.getChainId(),c=this.isChainUnsupported(i);if(t.chainId&&i!==t.chainId)try{await this.switchChain(t.chainId),i=t.chainId,c=this.isChainUnsupported(t.chainId)}catch(o){console.error(`Could not switch to chain id : ${t.chainId}`,o)}(s=this.options)!=null&&s.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const h={chain:{id:i,unsupported:c},provider:e,account:n};return this.emit("connect",h),h}catch(e){throw this.isUserRejectedRequestError(e)?new u(e):e.code===-32002?new v(e):e}}async switchAccount(){await(await this.getProvider()).request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}}export{y as MetaMaskConnector};
